apply plugin: 'com.android.library'

archivesBaseName = 'design'

dependencies {
  compile 'com.android.support:appcompat-v7:25.3.1'
  compile 'com.android.support:recyclerview-v7:25.3.1'
  compile 'com.android.support:support-annotations:25.3.1'
  compile 'com.android.support:support-compat:25.3.1'
  compile 'com.android.support:support-core-utils:25.3.1'
  compile 'com.android.support:support-core-ui:25.3.1'
  compile 'com.android.support:support-fragment:25.3.1'
  compile 'com.android.support:transition:25.3.1'

  testCompile ("com.android.support.test:runner:${project.rootProject.ext.testRunnerVersion}") {
    exclude module: 'support-annotations'
  }
  testCompile 'junit:junit:4.12'
}

android {
  sourceSets {
    main.manifest.srcFile 'AndroidManifest.xml'
    main.java.srcDirs = [
      'base',
      'ics',
      'lollipop',
      'src'
    ]
    main.res.srcDirs = [
      'res',
      'res-public'
    ]
    main.assets.srcDir 'assets'
    main.resources.srcDir 'src'

    test.java.srcDir 'jvmtests/javatests'
  }

  buildTypes.all {
    consumerProguardFiles 'proguard-rules.pro'
  }
}

android.libraryVariants.all { variant ->
  def name = variant.buildType.name

  if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
    return; // Skip debug builds.
  }
  def suffix = name.capitalize()

  def jarTask = project.tasks.create(name: "jar${suffix}", type: Jar){
    dependsOn variant.javaCompile
    from variant.javaCompile.destinationDir
    from 'LICENSE.txt'
  }
  def javadocTask = project.tasks.create(name: "javadoc${suffix}", type: Javadoc) {
    source android.sourceSets.main.java
    classpath = files(variant.javaCompile.classpath.files) + files(
        "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar")
  }

  def javadocJarTask = project.tasks.create(name: "javadocJar${suffix}", type: Jar) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
  }

  def sourcesJarTask = project.tasks.create(name: "sourceJar${suffix}", type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
  }

  artifacts.add('archives', javadocJarTask);
  artifacts.add('archives', sourcesJarTask);
}
